name: tests-all-platforms

on: workflow_dispatch

jobs:
  unauthorized_access_tests:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install Poetry and dependencies
      run: |
        pip install poetry
        poetry install -E aacgmv2
    - name: Run unauthorized access test (pytest)
      run: |
        make test-pytest-unauthorized-access
      env: 
        AURORAX_APIKEY_STAGING: ${{ secrets.AURORAX_APIKEY_STAGING }}
  
  build_and_read-only_tests:
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      max-parallel: 2
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry and dependencies
      run: |
        pip install poetry
        poetry install -E aacgmv2
    - name: Style guide enforcing (flake8)
      run: |
        make test-flake8
    - name: PEP8 checking (pycodestyle)
      run: |
        make test-pycodestyle
    - name: Linting (pylint)
      run: |
        make test-pylint
    - name: Security analysis (bandit)
      run: |
        make test-bandit    
    - name: Type-checking (mypy)
      run: |
        make test-mypy    
    - name: Run functionality tests (pytest)
      run: |
        make test-pytest-read
      env: 
        AURORAX_APIKEY_STAGING: ${{ secrets.AURORAX_APIKEY_STAGING }}
